<?php

/**
 * Invoke hook_permission().
 */
function flashcard_deck_permission() {
  return array(
    'flashcard deck view' => array(
      'title' => t('View flashcard decks'),
      'description' => t('Allow users to view decks'),
    ),
    'flashcard deck edit' => array(
      'title' => t('Edit flashcard decks'),
      'description' => t('Grant permission to add, modify and delete decks'),
    ),
    'flashcard deck admin' => array(
      'title' => t('Administer flashcard decks'),
    ),
  );
}

/**
 * Function flashcard_deck_access().
 */
function flashcard_deck_access($mode, $deck = NULL, $account = FALSE) {
  if (!$account) {
    global $user;
    $account = $user;
  }
  if (user_access('flashcard deck admin', $account)) return TRUE;
  switch ($mode) {
  case 'view':
    if (!$deck) return FALSE;
    return user_access('flashcard deck view', $account);
    break;
  case 'create':
    return user_access('flashcard deck edit', $account);
    break;
  case 'edit':
  case 'delete':
    if (!$deck) return FALSE;
    if ($deck->uid == $account->uid) return user_access('flashcard deck edit', $account);
    break;
  }
  return FALSE;
}

/**
 * Invoke hook_menu().
 */
function flashcard_deck_menu() {

  $items['flashcard/deck'] = array(
    'title' => 'Deck list',
    //'page callback' => 'flashcard_deck_list',
    //'access arguments' => array('flashcard deck view'),
    'type' => MENU_DEFAULT_LOCAL_TASK,
  );

  $items['flashcard/deck/%flashcard_deck'] = array(
    //'title' => 'View deck',
    'title callback' => 'flashcard_deck_title',
    'title arguments' => array(2),
    'page callback' => 'flashcard_deck_display',
    'page arguments' => array(2),
    'access callback' => 'flashcard_deck_access',
    'access arguments' => array('view', 2),
    'type' => MENU_NORMAL_ITEM,
    'menu_name' => 'main-menu',
    'weight' => 103,
  );
  
  $items['flashcard/deck/%flashcard_deck/view'] = array(
    'title' => 'View deck',
    'type' => MENU_DEFAULT_LOCAL_TASK,
  );

  $items['flashcard/deck_add'] = array(
    'title' => 'Create deck',
    'page callback' => 'flashcard_deck_form_wrapper',
    'page arguments' => array('create'),
    'access callback' => 'flashcard_deck_access',
    'access arguments' => array('add'),
    'type' => MENU_LOCAL_TASK,
    'weight' => 101,
  );

  $items['flashcard/deck/%flashcard_deck/edit'] = array(
    'title' => 'Edit deck',
    'page callback' => 'flashcard_deck_form_wrapper',
    'page arguments' => array('edit', 2),
    'access callback' => 'flashcard_deck_access',
    'access arguments' => array('edit', 2),
    'type' => MENU_LOCAL_TASK,
    'weight' => 102,
  );

  $items['flashcard/deck/%flashcard_deck/delete'] = array(
    'title' => 'Delete deck',
    'page callback' => 'flashcard_deck_form_wrapper',
    'page arguments' => array('delete', 2),
    'access callback' => 'flashcard_deck_access',
    'access arguments' => array('delete', 2),
    'type' => MENU_LOCAL_TASK,
    'weight' => 103,
  );

  return $items;
}

/**
 * Function flashcard_deck_title().
 */
function flashcard_deck_title($deck) {
  return $deck->name;
}

/**
 * Invoke hook_theme().
 */
function flashcard_deck_theme() {
  return array(
    'flashcard_deck' => array(
      'render element' => 'element',
      'variables' => array(
        'deck' => NULL,
      ),
      'template' => 'flashcard-deck',
    ),
  );
}

/**
 * Function flashcard_deck_display().
 */
function flashcard_deck_display($deck) {
  $build['deck'] = array(
    '#theme' => 'flashcard_deck',
    '#deck' => $deck,
  );

  foreach(module_implements('flashcard_deck_display') as $module){
    $f = $module. '_flashcard_deck_display';
    $f($build);
  }

  return $build;
}

/**
 * Function flashcard_deck_create().
 */
function flashcard_deck_create() {
  global $user;
  $deck = array(
    'isNew' => TRUE,
    'name' => '',
    'description' => '',
    'uid' => $user->uid,
  );
  return $deck;
}

/**
 * Function flashcard_deck_save().
 */
function flashcard_deck_save($deck) {
  return drupal_write_record('flashcard_deck', $deck, isset($deck->did) && $deck->did ? 'did' : FALSE);
}

 /**
  * Function flashcard_deck_get_actions().
  */
 function flashcard_deck_get_actions($deck) {
   $actions = array();
   $params = array(
     'query' => array(
       'destination' => current_path(),
     ),
   );
   /*
   foreach(module_implements('flashcard_deck_actions') as $module) {
     $f = $module . '_flashcard_deck_actions';
     $f($actions, $deck);
   }*/

   if (flashcard_deck_access('edit', $deck)) {
     $actions['edit'] = l(t('Edit'), 'flashcard/deck/' . $deck->did . '/edit', $params);
   }
   if (flashcard_deck_access('delete', $deck)) {
     $actions['delete'] = l(t('Delete'), 'flashcard/deck/' . $deck->did . '/delete', $params);
   }

   return $actions;
 }

/**
 * Function flashcard_deck_load().
 */
function flashcard_deck_load($did) {
  $query = db_select('flashcard_deck', 't')
    ->fields('t');
  $query->condition('t.did', $did);
  $result = $query->execute();
  if (!$result) return NULL;
  $record = $result->fetchObject();
  if (!$record) return NULL;
  return $record;
}

/**
 * Function flashcard_decks().
 */
function flashcard_deck_list() {

  $build = array();
  $header = array(
    'name' => t('Deck name'),
    'description' => t('Description'),
    'author' => t('Author'),
    'actions' => t('Actions'),
  );
  
  $query = db_select('flashcard_deck', 't')
    ->extend('PagerDefault');
  
  $query->fields('t', array('name', 'description', 'did'));

  $query->leftJoin('users', 'u', 't.uid = u.uid');
  $query->fields('u', array('name' => 'name')); 
  
  $result = $query
      ->limit(30)
      ->orderBy('t.name')
      ->execute();
  
  $rows = array();
  foreach ($result as $row) {
    $row->actions = array(
      'data' => array(
        '#theme' => 'item_list',
        '#items' => flashcard_deck_get_actions($row),
      ),
    );
    $did = $row->did;
    unset($row->did);
    $row->name = l($row->name, 'flashcard/deck/' . $did);
    $rows[$did] = array(
      'data' => (array) $row,
    );
  }
  
  $build['pager_table'] = array(
    '#theme' => 'table',
    '#header' => $header,
    '#rows' => $rows,
    '#empty' => t('There are no records found in the db'),
  );
  
  $build['pager_pager'] = array(
    '#theme' => 'pager',
  );
  return $build;
}

/**
 * Function flashcard_deck_form_wrapper().
 */
function flashcard_deck_form_wrapper($mode, $deck = NULL) {
  if ($mode == 'create') {
    $deck = (object) flashcard_deck_create();
    $mode = 'edit';
  }
  if ($mode == 'edit') {
    return drupal_get_form('flashcard_deck_edit_form', $deck);
  }
  if ($mode == 'delete') {
    return drupal_get_form('flashcard_deck_delete_form', $deck);
  }
}

/**
 * Function flashcard_deck_edit_form().
 */
function flashcard_deck_edit_form($form, $form_state, $deck = NULL) {

  $form['name'] = array(
    '#title' => t('Deck name'),
    '#type' => 'textfield',
    '#size' => 30,
    '#required' => TRUE,
    '#default_value' => $deck->name,
    '#autocomplete_path' => FALSE,
    '#description' => t('The name of the deck. Shall be unique.'),
  );

  $form['description'] = array(
    '#title' => t('Description'),
    '#type' => 'textarea',
    '#default_value' => $deck->description,
    '#cols' => 60,
    '#rows' => 5,
  );

  $form['actions']['save'] = array(
    '#type' => 'submit', 
    '#value' => t('Save'),
  );

  return $form;
}

/**
 * Function flashcard_edit_deck_submit().
 */
function flashcard_deck_edit_form_submit($form, $form_state) {
  $values = $form_state['values'];
  $deck = $form_state['build_info']['args'][0];

  $deck->name = $values['name'];
  $deck->description = $values['description'];

  if (flashcard_deck_save($deck)) {
    drupal_set_message(t('Record saved successfully...'));
  }
  else {
    drupal_set_message(t('Failed to save the record...'), 'error');
  }
}

/**
 * Function flashcard_deck_delete_form().
 */
function flashcard_deck_delete_form($form, &$form_state, $deck) {
  return confirm_form($form,
    t('Are you sure you want to delete %title?', array('%title' => $deck->name)),
    'flashcard/decks',
    t('This action cannot be undone.'),
    t('Delete'),
    t('Cancel')
  );
}

/**
 * Function flashcard_delete_form_submit().
 */
function flashcard_deck_delete_form_submit($form, &$form_state) {
  if ($form_state['values']['confirm']) {
    $deck = $form_state['build_info']['args'][0];
    flashcard_deck_delete($deck);
    $arr = array('%title' => $deck->name);
    watchdog('deck', 'deck %title deleted.', $arr);
    drupal_set_message(t('deck %title deleted.', $arr));
  }
  $form_state['redirect'] = 'flashcard'; 
}

/**
 * Function flashcard_deck_delete().
 */
function flashcard_deck_delete($deck) {
  db_delete('flashcard_decks')
    ->condition('t.did', $deck->did, 'IN')
    ->execute();

  foreach(module_implements('flashcard_deck_delete') as $module) {
    $function = $module . '_flashcard_deck_delete';
    $function($deck);
  }
}

